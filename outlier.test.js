const removeOutlier = require('./outlier');

test('to be empty', () => {
  const data = []
  expect(removeOutlier(data)).toEqual([]);
});

test('to be [1]', () => {
    const data = [1]
    expect(removeOutlier(data)).toEqual([1]);
  });

  test('to be [1,2,3]', () => {
    const data = [1,2,3]
    expect(removeOutlier(data)).toEqual([1,2,3]);
  });

  test('No filter', () => {
    const data = [0.8,0.8,0.8,0.8,10]
    expect(removeOutlier(data)).toEqual([0.8,0.8,0.8,0.8,10]);
  });

  test('Filter one outlier', () => {
    const data = [0.8,0.8,0.8,0.8,0.8,0.8,0.8,0.8,0.8,0.8,0.8,0.8,0.8,100]
    expect(removeOutlier(data)).toEqual([0.8,0.8,0.8,0.8,0.8,0.8,0.8,0.8,0.8,0.8,0.8,0.8,0.8]);
  });

  test('Filter two outliers', () => {
    const data = [0,1,2,1,2,3,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1000,2,1,2,1,2,1,2,400,2,1,2,1,2,1]
    expect(removeOutlier(data)).toEqual([0,1,2,1,2,3,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,2,1,2,1,2,1,2,2,1,2,1,2,1]);
  });

  test('All are the same!', () => {
    const data = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
    expect(removeOutlier(data)).toEqual([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]);
  });

  test('Huge Test', () => {
    const data = [
        0.6455237407302545,  0.9608158392792565, 0.21539454516685397,
        0.6556386226067283,  0.5614582445851142, 0.23105395738476453,
        0.4327617708272833, 0.14636426446515993,  0.6979629961366487,
       0.11320478244878807,  0.8564700433462855,  0.7112782530845503,
        0.4303325430914422,  0.9535083976322676,  0.4930108655369074,
        0.6838956052658376,  0.6700881098744402,  0.5125911867362718,
        0.3205248689013689,  35.796862148947284,  0.9443257649462105,
        30.870556572973882,  0.6001406237389755,  0.1867371432231213,
        0.7725188078752607,  0.9418919212519832,  0.1258804895436516,
        0.3549807722557543, 0.07166104414850283,  0.8076140312615121,
         36.12885896376517, 0.26151711002396216,  0.7035938500556018,
       0.08509086218788586, 0.38721749324535404, 0.40928675149748317,
        0.2895324537410233,  0.8231850789845234,  0.6339751756439926,
        0.6578535850155478,  1.7787266146094272,  0.4933171078297818,
       0.21273234872758562, 0.05236628900527496, 0.21840930589668184,
       0.20248794990778962, 0.12835695077216025,  0.9900667585885261,
        0.6595033954297063,  0.5853364171789812,  0.7243316789981602,
        0.3665578893341894,  0.5437697691659016,  0.9563939730661926,
         0.833588083515636,  0.7321278577957229, 0.47212434878690157,
        0.8838702598380663,  0.5908749168078131, 0.35917963784196605,
       0.14154468874862292,    0.89706153907647,  0.7132772761408501,
        0.9751839240071491,  0.8830364177264158,   0.367476194050822,
        0.6328888079608099,  0.8018824091991448, 0.19292907332204434,
         0.508689819869504,  0.6720619347591703,  0.3261805166070604,
        0.9067217221350263,  0.7291764026547947,  0.2185801739130082,
        0.3244465432676109,  0.9307128836975525,  0.9068090121311527,
        0.9436261616481925,  0.8881698823148292, 0.07738471077953513,
         2.647869400976388,  0.6869866534773987,  0.2654334215930789,
        0.6088338456790174, 0.38766357073199087,  0.6079590782795434,
        0.8445915135844586,  0.7094902946647932,  0.3451814901998711
     ]
    expect(removeOutlier(data)).toEqual([
        0.6455237407302545,  0.9608158392792565, 0.21539454516685397,
        0.6556386226067283,  0.5614582445851142, 0.23105395738476453,
        0.4327617708272833, 0.14636426446515993,  0.6979629961366487,
       0.11320478244878807,  0.8564700433462855,  0.7112782530845503,
        0.4303325430914422,  0.9535083976322676,  0.4930108655369074,
        0.6838956052658376,  0.6700881098744402,  0.5125911867362718,
        0.3205248689013689,   0.9443257649462105,
         0.6001406237389755,  0.1867371432231213,
        0.7725188078752607,  0.9418919212519832,  0.1258804895436516,
        0.3549807722557543, 0.07166104414850283,  0.8076140312615121,
        0.26151711002396216,  0.7035938500556018,
       0.08509086218788586, 0.38721749324535404, 0.40928675149748317,
        0.2895324537410233,  0.8231850789845234,  0.6339751756439926,
        0.6578535850155478,  1.7787266146094272,  0.4933171078297818,
       0.21273234872758562, 0.05236628900527496, 0.21840930589668184,
       0.20248794990778962, 0.12835695077216025,  0.9900667585885261,
        0.6595033954297063,  0.5853364171789812,  0.7243316789981602,
        0.3665578893341894,  0.5437697691659016,  0.9563939730661926,
         0.833588083515636,  0.7321278577957229, 0.47212434878690157,
        0.8838702598380663,  0.5908749168078131, 0.35917963784196605,
       0.14154468874862292,    0.89706153907647,  0.7132772761408501,
        0.9751839240071491,  0.8830364177264158,   0.367476194050822,
        0.6328888079608099,  0.8018824091991448, 0.19292907332204434,
         0.508689819869504,  0.6720619347591703,  0.3261805166070604,
        0.9067217221350263,  0.7291764026547947,  0.2185801739130082,
        0.3244465432676109,  0.9307128836975525,  0.9068090121311527,
        0.9436261616481925,  0.8881698823148292, 0.07738471077953513,
         2.647869400976388,  0.6869866534773987,  0.2654334215930789,
        0.6088338456790174, 0.38766357073199087,  0.6079590782795434,
        0.8445915135844586,  0.7094902946647932,  0.3451814901998711
     ]);
  });
